#!/usr/bin/env node

var program = require('commander');

// usage

program
  .version(require('../package').version)
  .usage('<command> [options]');

// sub-command help

program.on('--help', function(){
  console.log('  Commands:');
  console.log();
  console.log('    create         create a web application');
  console.log('    config         configure user and project defaults');
  console.log('    start          start a poe application');
  console.log();
  process.exit();
});

// parse argv

program.parse(process.argv);

/**
 * Module dependencies
 */

var spawn = require('win-fork');
var path = require('path');
var fs = require('fs');
var join = path.join;
var stat = fs.statSync;
var exists = fs.existsSync;
var resolve = path.resolve;

// args void of cmd

var args = process.argv.slice(3);

// command

var cmd = program.args[0] || 'start'

// executable

var bin = 'poe-' + cmd;

// local or resolve to absolute executable path

var local = join(__dirname, bin);

if (exists(local)) {
  bin = local;
} else {
  bin = process.env.PATH.split(path.delimiter).reduce(function(binary, p) {
    p = resolve(p, bin);
    return exists(p) && stat(p).isFile() ? p : binary;
  }, bin);
}

// run `poe-start` if bin does not exist

if (!exists(bin)) {
  bin = 'poe-start';
  args = process.argv.slice(2);
}

// spawn

var proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });

proc.on('close', function(code){
  process.exit(code);
});
